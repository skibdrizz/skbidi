local Players = game:GetService("Players")
local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local eggName = "Egg"
local SCAN_INTERVAL = 0.5
local USE_TOUCH = true

-- üìç Ghi nh·ªõ v·ªã tr√≠ ban ƒë·∫ßu
local originPosition = hrp.Position

-- T√¨m egg g·∫ßn nh·∫•t
local function findNearestEgg()
	local closestEgg, minDist = nil, math.huge

	for _, obj in workspace:GetDescendants() do
		if obj:IsA("MeshPart") and obj.Name == eggName and obj:IsDescendantOf(workspace) then
			local dist = (hrp.Position - obj.Position).Magnitude
			if dist < minDist then
				closestEgg = obj
				minDist = dist
			end
		end
	end

	return closestEgg
end

-- Ch·∫°m egg
local function touchEgg(egg)
	if not USE_TOUCH then return end
	pcall(function()
		firetouchinterest(hrp, egg, 0)
		task.wait(0.1)
		firetouchinterest(hrp, egg, 1)
	end)
end

-- Teleport t·ªõi egg
local function teleportTo(pos)
	hrp.CFrame = CFrame.new(pos + Vector3.new(0, 5, 0))
end

-- Teleport v·ªÅ ch·ªó c≈©
local function teleportBack()
	hrp.CFrame = CFrame.new(originPosition + Vector3.new(0, 5, 0))
end

-- Main loop
while true do
	local egg = findNearestEgg()

	if egg then
		print("ü•ö T√¨m th·∫•y egg! ƒê·∫øn nh·∫∑t...")
		teleportTo(egg.Position)
		humanoid:MoveTo(egg.Position)

		repeat
			task.wait(0.1)
			touchEgg(egg)
		until not egg:IsDescendantOf(workspace)

		print("‚úÖ Nh·∫∑t xong egg, quay v·ªÅ v·ªã tr√≠ g·ªëc.")
		teleportBack()
	else
		task.wait(SCAN_INTERVAL)
	end
end
