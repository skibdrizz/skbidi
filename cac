local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local eggName = "Egg"
local SCAN_INTERVAL = 0.5
local REACHED_DISTANCE = 5
local TIMEOUT = 5
local USE_TOUCH = true
local MAX_FAILED_ATTEMPTS = 3
local RESET_AFTER_PICK = 5 -- s·ªë l·∫ßn reset sau khi l·∫•y egg

local triedEggs = {}
local failedAttempts = 0

-- T√¨m egg g·∫ßn nh·∫•t ch∆∞a th·ª≠
local function findNearestEgg()
	local closestEgg, minDist = nil, math.huge

	for _, obj in workspace:GetDescendants() do
		if obj:IsA("MeshPart") and obj.Name == eggName and obj:IsDescendantOf(workspace) then
			if not triedEggs[obj] then
				local dist = (hrp.Position - obj.Position).Magnitude
				if dist < minDist then
					closestEgg = obj
					minDist = dist
				end
			end
		end
	end

	return closestEgg
end

-- Ch·∫°m ƒë·ªÉ nh·∫∑t (n·∫øu c·∫ßn)
local function touchEgg(egg)
	if not USE_TOUCH then return end

	pcall(function()
		firetouchinterest(hrp, egg, 0)
		task.wait(0.1)
		firetouchinterest(hrp, egg, 1)
	end)
end

-- Reset nh√¢n v·∫≠t
local function resetCharacter()
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.Health = 0
	end
end

-- ƒê·ª£i nh√¢n v·∫≠t h·ªìi sinh
local function waitForRespawn()
	character = player.CharacterAdded:Wait()
	hrp = character:WaitForChild("HumanoidRootPart")
	humanoid = character:WaitForChild("Humanoid")
end

-- Teleport ƒë·∫øn egg
local function teleportTo(pos)
	hrp.CFrame = CFrame.new(pos + Vector3.new(0, 5, 0))
end

-- Main loop
while true do
	local egg = findNearestEgg()

	if egg then
		triedEggs[egg] = true
		print("üéØ T√¨m th·∫•y egg, teleport t·ªõi...")
		teleportTo(egg.Position)

		-- ƒêi b·ªô ƒë·∫øn egg ƒë·ªÉ ch·∫°m
		humanoid:MoveTo(egg.Position)
		touchEgg(egg)

		local timer = 0
		repeat
			task.wait(0.1)
			timer += 0.1
			if USE_TOUCH then touchEgg(egg) end
		until not egg:IsDescendantOf(workspace) or timer >= TIMEOUT or (hrp.Position - egg.Position).Magnitude <= REACHED_DISTANCE

		if egg:IsDescendantOf(workspace) then
			warn("‚ö†Ô∏è Egg v·∫´n ch∆∞a ƒë∆∞·ª£c l·∫•y sau " .. TIMEOUT .. "s, b·ªè qua.")
			failedAttempts += 1
		else
			print("‚úÖ ƒê√£ l·∫•y egg. Reset " .. RESET_AFTER_PICK .. " l·∫ßn...")
			failedAttempts = 0

			for i = 1, RESET_AFTER_PICK do
				resetCharacter()
				waitForRespawn()
			end

			triedEggs = {} -- reset danh s√°ch egg ƒë√£ th·ª≠ sau khi l·∫•y th√†nh c√¥ng
		end

		if failedAttempts >= MAX_FAILED_ATTEMPTS then
			warn("‚ùå K·∫πt qu√° 3 l·∫ßn, reset nh√¢n v·∫≠t.")
			resetCharacter()
			waitForRespawn()
			triedEggs = {}
			failedAttempts = 0
		end
	else
		task.wait(SCAN_INTERVAL)
	end
end
